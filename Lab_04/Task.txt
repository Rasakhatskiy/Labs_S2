Завдання цієї лабораторної організовано у вигляді дерева.  
Окремі завдання є вузлами дерева.  
Варіант лабораторної відповідає шляху від кореня до листових вузлів.  
Дерево будується, починаючи з кореня (блок 0) і послідовно додаючи вузли з наступних блоків.  
У кожному варіанті може бути декілька вузлів одного блоку.  
Якщо вузли помічено позначкою Core – то такі вузли обов’язково мають бути у варіанті.  
Лише один вузол з кожного блоку, помічений позначкою Core, включається до кожного варіанту (хоча можна реалізувати кілька таких завдань, щоб отримати додаткові бали).  
Деякі завдання помічені позначками Provides: ABC та Requires: ABC.  
Це означає, що в кожному варіанті перед вузлом з позначкою Requires: ABC десь вище в дереві має бути вузол з позначкою Provides: ABC.  
Це може бути безпосередньо батьківський вузол чи на далекій відстані у дереві, в тому ж блоці чи в іншому. 

Блок 0  
1. Реалізувати структуру даних для опису дерева з довільною кількістю «дітей». У вузлах дерева зберігаються цілі числа. Core.  

Блок 1 – додавання елементів до дерева  
4. Реалізувати функцію для додавання елемента до довільного дерева. Передається значення нового елемента та вірогідність p. З вірогідністю p новий елемент додається як дитина заданого вузла, з вірогідністю 1-p додається за тою самою процедурою до одного з дітей даного вузла (один з дітей обирається з однаковою вірогідністю). Core. Provides: ADD_PROC  

Блок 2 – вивід дерева  
8. Реалізувати функцію для виводу дерева з використанням відступів для виводу дітей різних рівнів. Core.

Блок 3 – видалення елементів  
15. Реалізувати функцію для видалення елементу з довільного дерева. Передається значення елементу (якщо є кілька елементів з таким значенням – видаляються всі вузли). Звільнити пам’ять видалених елементів. Core.  

Блок 4 – бінарні дерева (у всіх завданнях реалізувати також вивід дерева, на основі відповідної функції з блоку 2)  
18. Реалізувати структуру даних для опису бінарного дерева. Реалізувати функцію для додавання елементів відповідно до значення (менші значення наліво, всі інші направо). Core.  

Блок 5 – подання бінарних дерев  
21. Побудувати з бінарного дерева послідовне подання на основі прямого порядку.  

Блок 6 – використання дерев  
24. Реалізувати дерево для подання логічних виразів. Підтримуються константи (0 та 1) та змінні, а також операції AND, OR, NOT, XOR, імплікації, еквівалентності. 
Реалізувати спрощення виразів, обчислення константних підвиразів. 
Реалізувати обчислення значення виразу для заданих значень змінних. 
Реалізувати перевірку, що вираз є завжди істинним (тавтологія) чи завжди хибним (протиріччя).  